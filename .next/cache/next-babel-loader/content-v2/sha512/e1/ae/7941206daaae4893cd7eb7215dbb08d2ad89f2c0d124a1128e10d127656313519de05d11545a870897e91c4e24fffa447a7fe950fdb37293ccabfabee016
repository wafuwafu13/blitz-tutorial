{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { AuthenticationError, Link, useMutation } from \"blitz\";\nimport { LabeledTextField } from \"app/components/LabeledTextField\";\nimport { Form, FORM_ERROR } from \"app/components/Form\";\nimport login from \"app/auth/mutations/login\";\nimport { LoginInput } from \"app/auth/validations\";\nexport const LoginForm = props => {\n  const [loginMutation] = useMutation(login);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Login\"), __jsx(Form, {\n    submitText: \"Login\",\n    schema: LoginInput,\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: async values => {\n      try {\n        var _props$onSuccess;\n\n        await loginMutation(values);\n        (_props$onSuccess = props.onSuccess) === null || _props$onSuccess === void 0 ? void 0 : _props$onSuccess.call(props);\n      } catch (error) {\n        if (error instanceof AuthenticationError) {\n          return {\n            [FORM_ERROR]: \"Sorry, those credentials are invalid\"\n          };\n        } else {\n          return {\n            [FORM_ERROR]: \"Sorry, we had an unexpected error. Please try again. - \" + error.toString()\n          };\n        }\n      }\n    }\n  }, __jsx(LabeledTextField, {\n    name: \"email\",\n    label: \"Email\",\n    placeholder: \"Email\"\n  }), __jsx(LabeledTextField, {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    type: \"password\"\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    }\n  }, \"Or \", __jsx(Link, {\n    href: \"/signup\"\n  }, \"Sign Up\")));\n};\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}