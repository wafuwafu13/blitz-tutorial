{"ast":null,"code":"// This imports the output of getIsomorphicEnhancedResolver()\nimport enhancedResolver from 'app/auth/mutations/login';\nimport { getAllMiddlewareForModule } from '@blitzjs/core';\nimport { rpcApiHandler } from '@blitzjs/server';\nimport path from 'path'; // Ensure these files are not eliminated by trace-based tree-shaking (like Vercel)\n\npath.resolve(\"next.config.js\");\npath.resolve(\"blitz.config.js\");\npath.resolve(\".next/__db.js\"); // End anti-tree-shaking\n\nlet db;\nlet connect;\n\ntry {\n  var _db, _db2;\n\n  db = require('db').default;\n\n  if (require('db').connect) {\n    connect = require('db').connect;\n  } else if ((_db = db) !== null && _db !== void 0 && _db.$connect || (_db2 = db) !== null && _db2 !== void 0 && _db2.connect) {\n    connect = () => db.$connect ? db.$connect() : db.connect();\n  } else {\n    connect = () => {};\n  }\n} catch (_) {}\n\nexport default rpcApiHandler(enhancedResolver, getAllMiddlewareForModule(enhancedResolver), () => {\n  var _connect;\n\n  return db && ((_connect = connect) === null || _connect === void 0 ? void 0 : _connect());\n});\nexport const config = {\n  api: {\n    externalResolver: true\n  }\n};","map":null,"metadata":{},"sourceType":"module"}